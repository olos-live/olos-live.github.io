searchNodes=[{"doc":"This is the main client module. It provides the top-level functions to interact with the AgentHub application, like inserting, deleting, updating and querying agent state and sending messages.","ref":"AgentHubClient.html","title":"AgentHubClient","type":"module"},{"doc":"","ref":"AgentHubClient.html#get_all/0","title":"AgentHubClient.get_all/0","type":"function"},{"doc":"","ref":"AgentHubClient.html#get_by_user_id/1","title":"AgentHubClient.get_by_user_id/1","type":"function"},{"doc":"","ref":"AgentHubClient.html#get_talking/1","title":"AgentHubClient.get_talking/1","type":"function"},{"doc":"","ref":"AgentHubClient.html#get_voice_idle/1","title":"AgentHubClient.get_voice_idle/1","type":"function"},{"doc":"","ref":"AgentHubClient.html#insert/2","title":"AgentHubClient.insert/2","type":"function"},{"doc":"","ref":"AgentHubClient.html#send_message/2","title":"AgentHubClient.send_message/2","type":"function"},{"doc":"","ref":"AgentHubClient.html#total_talking/1","title":"AgentHubClient.total_talking/1","type":"function"},{"doc":"","ref":"AgentHubClient.html#total_voice_idle/1","title":"AgentHubClient.total_voice_idle/1","type":"function"},{"doc":"Defines the agent state record to be used when dealing with Mnesia and the agent state strucuture to be used in all the rest of the application.","ref":"AgentHubClient.AgentState.html","title":"AgentHubClient.AgentState","type":"module"},{"doc":"","ref":"AgentHubClient.AgentState.html#agent_state/1","title":"AgentHubClient.AgentState.agent_state/1","type":"macro"},{"doc":"","ref":"AgentHubClient.AgentState.html#agent_state/2","title":"AgentHubClient.AgentState.agent_state/2","type":"macro"},{"doc":"","ref":"AgentHubClient.AgentState.html#attributes/0","title":"AgentHubClient.AgentState.attributes/0","type":"function"},{"doc":"","ref":"AgentHubClient.AgentState.html#record_to_struct/1","title":"AgentHubClient.AgentState.record_to_struct/1","type":"function"},{"doc":"","ref":"AgentHubClient.AgentState.html#t:chat_state/0","title":"AgentHubClient.AgentState.chat_state/0","type":"type"},{"doc":"","ref":"AgentHubClient.AgentState.html#t:t/0","title":"AgentHubClient.AgentState.t/0","type":"type"},{"doc":"","ref":"AgentHubClient.AgentState.html#t:voice_state/0","title":"AgentHubClient.AgentState.voice_state/0","type":"type"},{"doc":"Provides supporting functions for dealing with node names, like identifying the application in which the client is running based on the node name.","ref":"AgentHubClient.Cluster.html","title":"AgentHubClient.Cluster","type":"module"},{"doc":"Returns true iff the given node atom looks like an AgentHub node. If no node is given, assumes the current node. Examples iex&gt; AgentHubClient.Cluster . agenthub? :&quot;agenthub-xkpto123-blabla1@192.168.0.15&quot; true iex&gt; AgentHubClient.Cluster . agenthub? :&quot;nonode@nohost&quot; false iex&gt; AgentHubClient.Cluster . agenthub? :&quot;dialer@192.168.0.15&quot; false","ref":"AgentHubClient.Cluster.html#agenthub?/1","title":"AgentHubClient.Cluster.agenthub?/1","type":"function"},{"doc":"Returns true iff the current node is connected to at least one AgentHub node","ref":"AgentHubClient.Cluster.html#connected_to_agenthub?/0","title":"AgentHubClient.Cluster.connected_to_agenthub?/0","type":"function"},{"doc":"Returns the host part of the given node atom (like the one from Node.self/0 ) as a string. Examples iex&gt; AgentHubClient.Cluster . get_host :&quot;agenthub1@127.0.0.1&quot; &quot;127.0.0.1&quot; iex&gt; AgentHubClient.Cluster . get_host :&quot;nonode@nohost&quot; &quot;nohost&quot;","ref":"AgentHubClient.Cluster.html#get_host/1","title":"AgentHubClient.Cluster.get_host/1","type":"function"},{"doc":"Parses the given node atom (like the one from Node.self/0 ) and returns its individual components as strings. Examples iex&gt; AgentHubClient.Cluster . parse_node :&quot;agenthub1@127.0.0.1&quot; [ &quot;agenthub1&quot; , &quot;127.0.0.1&quot; ] iex&gt; AgentHubClient.Cluster . parse_node :&quot;nonode@nohost&quot; [ &quot;nonode&quot; , &quot;nohost&quot; ]","ref":"AgentHubClient.Cluster.html#parse_node/1","title":"AgentHubClient.Cluster.parse_node/1","type":"function"},{"doc":"","ref":"AgentHubClient.Cluster.html#standalone?/0","title":"AgentHubClient.Cluster.standalone?/0","type":"function"},{"doc":"Provides functions for deleting data from mnesia.","ref":"AgentHubClient.Mnesia.Delete.html","title":"AgentHubClient.Mnesia.Delete","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Delete.html#delete/1","title":"AgentHubClient.Mnesia.Delete.delete/1","type":"function"},{"doc":"This module is responsible for initializing mnesia, subscribing to events and depending on the scenario (standalone or cluster) using the Mnesia.Setup module to create tables or to copy them and joining the cluster.","ref":"AgentHubClient.Mnesia.Init.html","title":"AgentHubClient.Mnesia.Init","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Init.html#init/1","title":"AgentHubClient.Mnesia.Init.init/1","type":"function"},{"doc":"Provides functions for inserting data into the agent's state table in mnesia.","ref":"AgentHubClient.Mnesia.Insert.html","title":"AgentHubClient.Mnesia.Insert","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Insert.html#insert/2","title":"AgentHubClient.Mnesia.Insert.insert/2","type":"function"},{"doc":"This module listens for events from mnesia like up and down and invoke the corresponding handlers in the Mnesia.Setup module.","ref":"AgentHubClient.Mnesia.Monitor.html","title":"AgentHubClient.Mnesia.Monitor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"AgentHubClient.Mnesia.Monitor.html#child_spec/1","title":"AgentHubClient.Mnesia.Monitor.child_spec/1","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Monitor.html#start_link/1","title":"AgentHubClient.Mnesia.Monitor.start_link/1","type":"function"},{"doc":"Provides functions for querying the agents table in mnesia.","ref":"AgentHubClient.Mnesia.Queries.html","title":"AgentHubClient.Mnesia.Queries","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Queries.html#count_by_voice_state/2","title":"AgentHubClient.Mnesia.Queries.count_by_voice_state/2","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Queries.html#get_all/0","title":"AgentHubClient.Mnesia.Queries.get_all/0","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Queries.html#get_by_campaign_id/1","title":"AgentHubClient.Mnesia.Queries.get_by_campaign_id/1","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Queries.html#get_by_user_id/1","title":"AgentHubClient.Mnesia.Queries.get_by_user_id/1","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Queries.html#get_by_voice_state/2","title":"AgentHubClient.Mnesia.Queries.get_by_voice_state/2","type":"function"},{"doc":"Provides functions for setting up mnesia in two different scenarios: creating tables when running standalone or when the first AgentHub starts joining the cluster and optionally copying tables when running in cluster","ref":"AgentHubClient.Mnesia.Setup.html","title":"AgentHubClient.Mnesia.Setup","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Setup.html#create_tables/0","title":"AgentHubClient.Mnesia.Setup.create_tables/0","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Setup.html#handle_node_down/0","title":"AgentHubClient.Mnesia.Setup.handle_node_down/0","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Setup.html#handle_node_up/0","title":"AgentHubClient.Mnesia.Setup.handle_node_up/0","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Setup.html#join_cluster/1","title":"AgentHubClient.Mnesia.Setup.join_cluster/1","type":"function"},{"doc":"Provides functions that update agent's state record in the mnesia table.","ref":"AgentHubClient.Mnesia.Updates.html","title":"AgentHubClient.Mnesia.Updates","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Updates.html#change_voice_status/2","title":"AgentHubClient.Mnesia.Updates.change_voice_status/2","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Updates.html#set_offline/1","title":"AgentHubClient.Mnesia.Updates.set_offline/1","type":"function"},{"doc":"","ref":"AgentHubClient.Mnesia.Updates.html#set_online/1","title":"AgentHubClient.Mnesia.Updates.set_online/1","type":"function"},{"doc":"Provides common functions used by the other mnesia-modules.","ref":"AgentHubClient.Mnesia.Utils.html","title":"AgentHubClient.Mnesia.Utils","type":"module"},{"doc":"","ref":"AgentHubClient.Mnesia.Utils.html#now/0","title":"AgentHubClient.Mnesia.Utils.now/0","type":"function"},{"doc":"Provides an interface for interacting with the data store. In this version the data store is mnesia so we delegate all the functions to mnesia-specific modules.","ref":"AgentHubClient.Store.html","title":"AgentHubClient.Store","type":"module"},{"doc":"See AgentHubClient.Mnesia.Updates.change_voice_status/2 .","ref":"AgentHubClient.Store.html#change_voice_status/2","title":"AgentHubClient.Store.change_voice_status/2","type":"function"},{"doc":"See AgentHubClient.Mnesia.Queries.count_by_voice_state/2 .","ref":"AgentHubClient.Store.html#count_by_voice_state/2","title":"AgentHubClient.Store.count_by_voice_state/2","type":"function"},{"doc":"See AgentHubClient.Mnesia.Delete.delete/1 .","ref":"AgentHubClient.Store.html#delete/1","title":"AgentHubClient.Store.delete/1","type":"function"},{"doc":"See AgentHubClient.Mnesia.Queries.get_all/0 .","ref":"AgentHubClient.Store.html#get_all/0","title":"AgentHubClient.Store.get_all/0","type":"function"},{"doc":"See AgentHubClient.Mnesia.Queries.get_by_campaign_id/1 .","ref":"AgentHubClient.Store.html#get_by_campaign_id/1","title":"AgentHubClient.Store.get_by_campaign_id/1","type":"function"},{"doc":"See AgentHubClient.Mnesia.Queries.get_by_user_id/1 .","ref":"AgentHubClient.Store.html#get_by_user_id/1","title":"AgentHubClient.Store.get_by_user_id/1","type":"function"},{"doc":"See AgentHubClient.Mnesia.Queries.get_by_voice_state/2 .","ref":"AgentHubClient.Store.html#get_by_voice_state/2","title":"AgentHubClient.Store.get_by_voice_state/2","type":"function"},{"doc":"See AgentHubClient.Mnesia.Init.init/1 .","ref":"AgentHubClient.Store.html#init/1","title":"AgentHubClient.Store.init/1","type":"function"},{"doc":"See AgentHubClient.Mnesia.Insert.insert/2 .","ref":"AgentHubClient.Store.html#insert/2","title":"AgentHubClient.Store.insert/2","type":"function"},{"doc":"See AgentHubClient.Mnesia.Updates.set_offline/1 .","ref":"AgentHubClient.Store.html#set_offline/1","title":"AgentHubClient.Store.set_offline/1","type":"function"},{"doc":"See AgentHubClient.Mnesia.Updates.set_online/1 .","ref":"AgentHubClient.Store.html#set_online/1","title":"AgentHubClient.Store.set_online/1","type":"function"},{"doc":"Supervises mnesia and libcluster processes. The libcluster process is only used if the node is started with a name. Add it to your supervision tree (usually in application.ex ). Example: children = [ { AgentHubClient.Supervisor , replication : true } ] Supervisor . start_link ( children , strategy : :one_for_one ) The only available option is replication . When enabled, a copy of the mnesia table that holds agents state is kept locally in this node, so reading data is a local operation. If disabled, all access to the data is remote as the data is in the AgentHub node.","ref":"AgentHubClient.Supervisor.html","title":"AgentHubClient.Supervisor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"AgentHubClient.Supervisor.html#child_spec/1","title":"AgentHubClient.Supervisor.child_spec/1","type":"function"},{"doc":"","ref":"AgentHubClient.Supervisor.html#start_link/1","title":"AgentHubClient.Supervisor.start_link/1","type":"function"},{"doc":"AgentHub Client The AgentHub Client is an Elixir library that provides access to the AgentHub application. You add it as a dependency in your Elixir application and get access to all the funcionalities provided by the AgentHub, like fetching a list of agents in certain state or getting only the total, sending text messages to an agent and so on.","ref":"readme.html","title":"AgentHub Client","type":"extras"},{"doc":"Add it as a dependency in yout mix.exs file. You must have ssh access to the repository in the Olos' GitLab. defp deps do [ { :agenthub_client , git : &quot;git@olosprdspogit03:olos-live/agenthub-client.git&quot; } ] end Add it to your supervision tree (usually in application.ex ). children = [ { AgentHubClient.Supervisor , replication : true } ] Supervisor . start_link ( children , strategy : :one_for_one ) Then you can invoke functions provided by the AgentHubClient module. Example: def some_dialer_function do agents = AgentHubClient . get_talking ( &quot;campaign11&quot; ) # do something with the agents end","ref":"readme.html#using-it","title":"AgentHub Client - Using it","type":"extras"},{"doc":"Currently the only option you have when starting this module is the replication . The default value is false . If you set it to true then the client will keep a local copy of the agents state table in its memory, which improves the performance of reads at the expenses of the performance of writes.","ref":"readme.html#configuring-it","title":"AgentHub Client - Configuring it","type":"extras"},{"doc":"If you simply start your application like you usually do, without a name, you will be starting with an empty local in-memory store, with no agents logged in: iex -S mix In this case you can call the insert/2 function multiple times in your tests to to add some agents to the list so you can test your business logic. If you want your application to access data from an actual instance of the AgentHub that is running in your laptop, start your application with a name. Example: iex --name dialer@127.0.0.1 -S mix It will automatically connect to one or more instances of AgentHub under the names of agenthub1@127.0.0.1 and agenthub2@127.0.0.1 . If they are not running, your application will start like in the first case, i.e., with an empty list of agents, with some warnings about not being able to connect to those nodes. You can safely ignore them.","ref":"readme.html#starting-your-application","title":"AgentHub Client - Starting your application","type":"extras"},{"doc":"If instead of the latest version of this module you want your application to use an specific version, simply add a tag attribute with the required version next to the git repository in your mix.exs file. Example: defp deps do [ { :agenthub_client , git : &quot;git@olosprdspogit03:olos-live/agenthub-client.git&quot; , tag : &quot;v1.3.0&quot; } ] end","ref":"readme.html#using-a-specific-version","title":"AgentHub Client - Using a specific version","type":"extras"},{"doc":"In production, you will be starting your application with an actual IP address instead of 127.0.0.1 . In that case, this module will automatically try to connect to the applications that you inform in the environment variable named AGENTHUB_CLIENT_SERVICES . Example: AGENTHUB_CLIENT_SERVICES=agenthub, dialer, linker The application names are actually kubernetes services names. If you do not set this environment variable, it is assumed agenthub .","ref":"readme.html#using-it-in-production","title":"AgentHub Client - Using it in production","type":"extras"},{"doc":"If you are working on this project, before publishing this library, please remember to: Run mix test to make sure tests are still passing Increment the version in mix.exs Commit and push to the repo Update the documentation: Checkout the Olos Live documentation project: git clone git@github.com:olos-live/olos-live.github.io.git Set the environment variable OLOS_LIVE_DOCS_PATH with the path to that project: export OLOS_LIVE_DOCS_PATH=/home/yourname/projects/olos-live/olos-live.github.io/ Run mix docs Commit and push the changes in the olos-live.github.io project Access https://olos-live.github.io/agenthub-client/ to verify it.","ref":"readme.html#contributing","title":"AgentHub Client - Contributing","type":"extras"}]